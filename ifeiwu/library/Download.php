<?php
namespace ifeiwu; class Download { private static $_instance; public static function getInstance() { if (!(self::$_instance instanceof self)) { self::$_instance = new self(); } return self::$_instance; } private function __construct() { } public function browser($path, $filename) { $filepath = $path . '/' . $filename; if (stripos(php_uname('s'), 'Window') !== false) { $filepath = iconv('UTF-8', 'GBK//IGNORE', $filepath); } if (!file_exists($filepath)) { return array('code' => 404, 'message' => '没有该文件！'); } $encoded_filename = urlencode($filename); $encoded_filename = str_replace("+", "%20", $encoded_filename); switch (strtolower(substr(strrchr($filename, '.'), 1))) { case 'pdf' : $mime_type = 'application/pdf'; break; case 'zip' : $mime_type = 'application/zip'; break; case 'gif' : $mime_type = 'image/gif'; break; case 'jpeg' : case 'jpg' : $mime_type = 'image/jpg'; break; default : $mime_type = 'application/octet-stream'; } header('Pragma: no-cache'); header('Expires: 0'); header('Cache-Component: must-revalidate, post-check=0, pre-check=0'); header('Content-Type: application/force-download'); header('Content-Type: ' . $mime_type . ';charset=utf-8'); header('Content-Type: application/download'); header('Content-Description: File Transfer'); header('Content-Length: ' . filesize($filepath)); $ua = $_SERVER["HTTP_USER_AGENT"]; if (preg_match('/MSIE/', $ua) || preg_match('/Trident\/7.0/', $ua)) { header('Content-Disposition: attachment; filename="' . $encoded_filename . '"'); } else if (preg_match('/Firefox/', $ua)) { header('Content-Disposition: attachment; filename*="utf8\'\'' . $filename . '"'); } else { header('Content-Disposition: attachment; filename="' . $filename . '"'); } header('Content-Transfer-Encoding: binary'); readfile($filepath); } public function curl($url, $filename) { $success = false; $cp = curl_init($url); $fp = fopen($filename, "w+"); if ($fp) { curl_setopt($cp, CURLOPT_FILE, $fp); curl_setopt($cp, CURLOPT_CONNECTTIMEOUT, 60); curl_setopt($cp, CURLOPT_FOLLOWLOCATION, true); curl_setopt($cp, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($cp, CURLOPT_SSL_VERIFYHOST, false); if (curl_exec($cp) === false) { fclose($fp); unlink($filename); $message = curl_error($cp); } else { fclose($fp); } if (curl_getinfo($cp, CURLINFO_HTTP_CODE) == 200) { $success = true; } else { unlink($filename); } } curl_close($cp); return array($success, $message); } } 