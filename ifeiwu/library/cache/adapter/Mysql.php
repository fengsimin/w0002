<?php
 namespace ifeiwu\cache\adapter; use ifeiwu\cache\AdapterAbstract; use ifeiwu\Config; class Mysql extends AdapterAbstract { protected $pdo; protected $option; public function __construct($config) { $this->option = $config; $this->pdo = new \PDO('mysql:dbname=' . $this->option['name'] . ';host=' . $this->option['host'] . ';charset=utf8', $this->option['user'], $this->option['pass']); $this->pdo->setAttribute(\PDO::MYSQL_ATTR_INIT_COMMAND, 'SET NAMES utf8'); $this->pdo->setAttribute(\PDO::ATTR_EMULATE_PREPARES, false); $this->pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION); $this->pdo->setAttribute(\PDO::MYSQL_ATTR_USE_BUFFERED_QUERY, true); } public function delete($key) { $key = $this->_key($key); $this->pdo->exec("DELETE FROM {$this->option['table']} WHERE `key` = '$key'"); } public function get($key) { $key = $this->_key($key); $rs = $this->pdo->query("SELECT `value` FROM {$this->option['table']} WHERE `key` = '$key'"); return unserialize(gzuncompress(base64_decode($rs->fetchColumn()))); } public function set($key, $value, $expire) { $key = $this->_key($key); $value = base64_encode(gzcompress(serialize($value))); $table = $this->option['table']; $rs = $this->pdo->query("SELECT COUNT(*) FROM $table WHERE `key` = '$key'"); if ($rs->fetchColumn() == 0) { $this->pdo->exec("INSERT INTO $table(`key`, `value`, `expire`) VALUES ('$key', '$value', '$expire')"); } else { $this->pdo->exec("UPDATE $table SET `value`='$value', `expire`='$expire' WHERE `key`='$key'"); } } public function setOption($key, $value) { switch ($key) { case 'expire': $this->option['expire'] = $value; break; case 'prefix': $this->option['prefix'] = $value; break; } } public function has($key) { $key = $this->_key($key); $rs = $this->pdo->query("SELECT COUNT(*) FROM {$this->option['table']} WHERE `key` = '$key'"); return $rs->fetchColumn(); } public function clear() { $prefix = $this->option['prefix']; $prefix = $prefix ? $prefix . '|_' : '|_'; $this->pdo->exec("DELETE FROM {$this->option['table']}  WHERE `key` like '{$prefix}%' escape '|'"); } } 