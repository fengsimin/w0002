<?php
 namespace ifeiwu\cache\adapter; use ifeiwu\cache\AdapterAbstract; use Memcache as BaseMemcache; class Memcache extends AdapterAbstract { protected $server; protected $option; public function __construct($config) { $this->option = $config; $this->server = new BaseMemcache(); $this->server->addServer($this->option['host'], $this->option['port']); } public function delete($key) { $this->server->delete($this->_key($key)); } public function get($key) { $value = $this->server->get($this->_key($key)); return unserialize(gzuncompress(base64_decode($value))); } public function set($key, $value, $expire) { $value = base64_encode(gzcompress(serialize($value))); $this->server->set($this->_key($key), $value, 0, $expire ?: $this->option['expire']); } public function setOption($key, $value) { switch ($key) { case 'expire': $this->option['expire'] = $value; break; case 'prefix': $this->option['prefix'] = $value; break; } } public function has($key) { return $this->server->get($this->_key($key)) ? true : false; } public function clear() { } } 