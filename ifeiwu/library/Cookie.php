<?php
namespace ifeiwu; class Cookie { private $prefix; private $expire; private $path; private $domain; private $secure; private $httponly; private static $_instance; public static function getInstance($config = array()) { if (!(self::$_instance instanceof self)) { self::$_instance = new self($config); } return self::$_instance; } private function __construct($config) { $config = array_merge(Config::get('cookie'), $config); $this->prefix = $config['prefix'] ? : ''; $this->expire = $config['expire'] ? : 0; $this->path = $config['path'] ? : '/'; $this->domain = $config['domain'] ? : ''; $this->secure = $config['secure'] ? : false; $this->httponly = $config['httponly'] ? : false; } public function set($name, $value = '', $prefix = null) { $prefix = $prefix ? : $this->prefix; $name = $prefix . $name; $expire = $this->expire ? time() + intval($this->expire) : 0; setcookie($name, $value, $expire, $this->path, $this->domain, $this->secure, $this->httponly); } public function get($name, $prefix = null) { $prefix = $prefix ? : $this->prefix; $name = $prefix . $name; if (isset($_COOKIE[$name])) { return $_COOKIE[$name]; } else { return null; } } public function delete($name, $prefix = null) { $prefix = $prefix ? : $this->prefix; $name = $prefix . $name; $this->_delete($name); } public function clear() { if (empty($_COOKIE)) { return; } foreach ($_COOKIE as $name => $value) { if (strpos($name, $this->prefix) === 0) { $this->_delete($name); } } } private function _delete($name) { setcookie($name, '', time() - 3600, $this->path, $this->domain, $this->secure, $this->httponly); unset($_COOKIE[$name]); } } 