<?php
namespace ifeiwu; use ifeiwu\cache\AdapterInterface; use ifeiwu\cache\adapter\Memcache; use ifeiwu\cache\adapter\Mysql; use ifeiwu\cache\adapter\File; use ifeiwu\Config; class Cache { private $adapter; private static $_instance; public static function getInstance($adapter = null) { if (!(self::$_instance instanceof self)) { self::$_instance = new self($adapter); } return self::$_instance; } private function __construct($adapter) { $this->setAdapter($adapter); } public function setAdapter($adapter) { $config = Config::get('cache'); if ($adapter == 'memcache') { $this->adapter = new Memcache($config['memcache']); } elseif ($adapter == 'file') { $this->adapter = new File($config['file']); } else { $this->adapter = new Mysql($config['mysql']); } } public function get($key) { return $this->adapter->get($key); } public function set($key, $value, $expire = null) { $this->adapter->set($key, $value, $expire); } public function has($key) { return $this->adapter->has($key); } public function delete($key) { $this->adapter->delete($key); } public function clear() { $this->adapter->clear(); } public function setOption($key, $value) { $this->adapter->setOption($key, $value); } public function __call($func, $params) { if (method_exists($this->adapter, $func)) { return call_user_func_array(array($this->adapter, $func), $params); } } } 